#include "sigointegrators.hh"

int main(){
	double ScalarDensity = 0;
	double BaryonDensity = 0;
	double KineticEnergy = 0;
	double EnergyDensity = 0;

	ofstream DAT;
	DAT.open("SigOm.dat");
cout << mstar;

	while (BaryonDensity <= 10*rho0){
		EnergyDensity = 0;
		ScalarDensity = Int_rhoS(0, kFermi, 1000);
		KineticEnergy = Int_Ekinetic(0, kFermi, 1000);
			
		EnergyDensity = 0.5*Gsigma2(BaryonDensity)*ScalarDensity*ScalarDensity;
		EnergyDensity += 0.5*Gomega2*BaryonDensity*BaryonDensity;
		EnergyDensity += 0.5*Grho2(BaryonDensity) * BaryonDensity*BaryonDensity;
		EnergyDensity += KineticEnergy;

//		if (BaryonDensity == 0){
//			EnergyDensity = 0;
//		} 
//		else if(BaryonDensity == 1){
//			EnergyDensity = -16.3;
//		}

		cout << BaryonDensity << " " << EnergyDensity/MeVtoinvFM << '\n';
		DAT << BaryonDensity << " " << EnergyDensity/MeVtoinvFM << '\n';
		
		BaryonDensity += 0.10;
	}

	DAT.close();
	return 0;
} 


